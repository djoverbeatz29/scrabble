[{"/mnt/c/Users/kpove/Programming/projects/scrabble/src/reportWebVitals.js":"1","/mnt/c/Users/kpove/Programming/projects/scrabble/src/helpers/createBoard.js":"2","/mnt/c/Users/kpove/Programming/projects/scrabble/src/components/Cell.js":"3","/mnt/c/Users/kpove/Programming/projects/scrabble/src/components/Board.js":"4","/mnt/c/Users/kpove/Programming/projects/scrabble/src/helpers/cellBonusMap.js":"5","/mnt/c/Users/kpove/Programming/projects/scrabble/src/index.js":"6","/mnt/c/Users/kpove/Programming/projects/scrabble/src/App.js":"7"},{"size":362,"mtime":1608786330576,"results":"8","hashOfConfig":"9"},{"size":945,"mtime":1609875082493,"results":"10","hashOfConfig":"9"},{"size":1084,"mtime":1609885022566,"results":"11","hashOfConfig":"9"},{"size":2537,"mtime":1609970322389,"results":"12","hashOfConfig":"9"},{"size":397,"mtime":1609365488862,"results":"13","hashOfConfig":"9"},{"size":500,"mtime":1608786330514,"results":"14","hashOfConfig":"9"},{"size":241,"mtime":1608786790111,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"wss24z",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/kpove/Programming/projects/scrabble/src/reportWebVitals.js",[],["35","36"],"/mnt/c/Users/kpove/Programming/projects/scrabble/src/helpers/createBoard.js",[],"/mnt/c/Users/kpove/Programming/projects/scrabble/src/components/Cell.js",["37","38","39"],"import { useEffect, useState } from 'react';\r\n\r\nexport default function Cell(props) {\r\n    const [isRight, setIsRight]=useState(true);\r\n    const coords={x: parseInt(props.x), y: parseInt(props.y)}\r\n    const [letter, setLetter] = useState(props.letter);\r\n    const [value, setValue] = useState(props.value);\r\n    const [display, setDisplay] = useState(getDisplay());\r\n\r\n    function getDisplay() {\r\n        if (letter) return letter;\r\n        else return coords.x===7 && coords.y===7?\"★\":value;\r\n    }\r\n\r\n    function handleChange() {\r\n        setDisplay(getDisplay());\r\n    }\r\n\r\n    function handleClick() {\r\n        console.log(\"Called from Cell!\");\r\n        setIsRight(!isRight);\r\n        setValue(isRight ? \"→\" : \"↓\");\r\n    }\r\n\r\n    return (<div onChange={handleChange}\r\n            data-x={coords.x}\r\n            data-y={coords.y}\r\n            style={{ backgroundColor: props.color,\r\n                width: '40px',\r\n                height: '40px', \r\n                textAlign: 'center', \r\n                verticalAlign: 'middle' }}\r\n            >{display}</div>\r\n    );\r\n}","/mnt/c/Users/kpove/Programming/projects/scrabble/src/components/Board.js",["40"],"import { useState } from 'react';\r\nimport Cell from './Cell';\r\n\r\nexport default function Board(props) {\r\n    const [board, setBoard] = useState(props.board);\r\n    const [currCell, setCurrCell] = useState({x: 7, y: 7, isRight: true});\r\n\r\n    function handleClick(e) {\r\n        const x = parseInt(e.target.dataset.x);\r\n        const y = parseInt(e.target.dataset.y);\r\n        board[x][y].value=board[x][y].isRight ? \"→\" : \"↓\";\r\n        if (x===currCell.x && y===currCell.y) {\r\n            setCurrCell({\r\n                ...currCell,\r\n                isRight: !currCell.isRight\r\n            })\r\n        }\r\n        else {\r\n            setCurrCell({\r\n                ...currCell,\r\n                x: x,\r\n                y: y\r\n            })\r\n        }\r\n        console.log(currCell);\r\n    }\r\n\r\n    function handleKeyDown(e) {\r\n        if (e.shiftKey) {\r\n            if (e.key!=='Shift'){\r\n                console.log(e.key);\r\n                board[currCell.x][currCell.y].letter = e.key;\r\n                setCurrCell({\r\n                    ...currCell,\r\n                    x: currCell.isRight? currCell.x : Math.min(14, currCell.x+1),\r\n                    y: currCell.isRight? Math.min(14, currCell.y+1): currCell.y\r\n                })\r\n                console.log(currCell);\r\n            }\r\n        }\r\n        else {\r\n            if (e.key==='Backspace') {\r\n                console.log(e.key);\r\n                setCurrCell({\r\n                    ...currCell,\r\n                    x: currCell.isRight? currCell.x : Math.max(0, currCell.x-1),\r\n                    y: currCell.isRight? Math.max(0, currCell.y-1): currCell.y\r\n                })\r\n                console.log(currCell);\r\n            }\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <table onClick={handleClick} onKeyDown={handleKeyDown} tabIndex={0}>\r\n                <tbody>\r\n                    {board.map(row=>\r\n                        <tr>\r\n                            {row.map(col=><td>{\r\n                                <Cell onKeyDown={handleKeyDown}\r\n                                    onClick={handleClick} \r\n                                    x={col.x} \r\n                                    y={col.y} \r\n                                    color={col.color} \r\n                                    letter={col.letter} \r\n                                    value={col.value} />}\r\n                                </td>)}\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}","/mnt/c/Users/kpove/Programming/projects/scrabble/src/helpers/cellBonusMap.js",[],["41","42"],"/mnt/c/Users/kpove/Programming/projects/scrabble/src/index.js",[],["43","44"],"/mnt/c/Users/kpove/Programming/projects/scrabble/src/App.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":10,"nodeType":"51","messageId":"52","endLine":1,"endColumn":19},{"ruleId":"49","severity":1,"message":"53","line":6,"column":20,"nodeType":"51","messageId":"52","endLine":6,"endColumn":29},{"ruleId":"49","severity":1,"message":"54","line":19,"column":14,"nodeType":"51","messageId":"52","endLine":19,"endColumn":25},{"ruleId":"49","severity":1,"message":"55","line":5,"column":19,"nodeType":"51","messageId":"52","endLine":5,"endColumn":27},{"ruleId":"45","replacedBy":"56"},{"ruleId":"47","replacedBy":"57"},{"ruleId":"45","replacedBy":"58"},{"ruleId":"47","replacedBy":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setLetter' is assigned a value but never used.","'handleClick' is defined but never used.","'setBoard' is assigned a value but never used.",["60"],["61"],["60"],["61"],"no-global-assign","no-unsafe-negation"]