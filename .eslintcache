[{"/mnt/c/Users/kpove/Programming/projects/scrabble/src/reportWebVitals.js":"1","/mnt/c/Users/kpove/Programming/projects/scrabble/src/helpers/createBoard.js":"2","/mnt/c/Users/kpove/Programming/projects/scrabble/src/components/Cell.js":"3","/mnt/c/Users/kpove/Programming/projects/scrabble/src/components/Board.js":"4","/mnt/c/Users/kpove/Programming/projects/scrabble/src/helpers/cellBonusMap.js":"5","/mnt/c/Users/kpove/Programming/projects/scrabble/src/index.js":"6","/mnt/c/Users/kpove/Programming/projects/scrabble/src/App.js":"7"},{"size":362,"mtime":1608786330576,"results":"8","hashOfConfig":"9"},{"size":945,"mtime":1609875082493,"results":"10","hashOfConfig":"9"},{"size":1041,"mtime":1609869077118,"results":"11","hashOfConfig":"9"},{"size":2344,"mtime":1609874344881,"results":"12","hashOfConfig":"9"},{"size":397,"mtime":1609365488862,"results":"13","hashOfConfig":"9"},{"size":500,"mtime":1608786330514,"results":"14","hashOfConfig":"9"},{"size":241,"mtime":1608786790111,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"wss24z",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/kpove/Programming/projects/scrabble/src/reportWebVitals.js",[],["34","35"],"/mnt/c/Users/kpove/Programming/projects/scrabble/src/helpers/createBoard.js",[],"/mnt/c/Users/kpove/Programming/projects/scrabble/src/components/Cell.js",["36","37","38"],"/mnt/c/Users/kpove/Programming/projects/scrabble/src/components/Board.js",["39"],"import { useState } from 'react';\r\nimport Cell from './Cell';\r\n\r\nexport default function Board(props) {\r\n    const [board, setBoard] = useState(props.board);\r\n    const [currCell, setCurrCell] = useState({x: 7, y: 7, isRight: true});\r\n\r\n    function handleClick(e) {\r\n        const x = parseInt(e.target.dataset.x);\r\n        const y = parseInt(e.target.dataset.y);\r\n        board[x][y].value=board[x][y].isRight ? \"→\" : \"↓\";\r\n        if (x===currCell.x && y===currCell.y) {\r\n            setCurrCell({\r\n                ...currCell,\r\n                isRight: !currCell.isRight\r\n            })\r\n        }\r\n        else {\r\n            setCurrCell({\r\n                ...currCell,\r\n                x: x,\r\n                y: y\r\n            })\r\n        }\r\n        console.log(currCell);\r\n    }\r\n\r\n    function handleKeyDown(e) {\r\n        if (e.shiftKey) {\r\n            if (e.key!=='Shift'){\r\n                console.log(e.key);\r\n                board[currCell.x][currCell.y].letter = e.key;\r\n                setCurrCell({\r\n                    ...currCell,\r\n                    x: currCell.isRight? currCell.x+1 : currCell.x,\r\n                    y: currCell.isRight? currCell.y: currCell.y+1\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            if (e.key==='Backspace') {\r\n                console.log(e.key);\r\n                setCurrCell({\r\n                    ...currCell,\r\n                    x: currCell.isRight? currCell.x-1 : currCell.x,\r\n                    y: currCell.isRight? currCell.y: currCell.y-1\r\n                })\r\n            }\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <table onClick={handleClick} onKeyDown={handleKeyDown} tabIndex={0}>\r\n                <tbody>\r\n                    {board.map(row=>\r\n                        <tr>\r\n                            {row.map(col=><td>{\r\n                                <Cell onKeyDown={handleKeyDown} \r\n                                    x={col.x} \r\n                                    y={col.y} \r\n                                    color={col.color} \r\n                                    letter={col.letter} \r\n                                    value={col.value} />}\r\n                                </td>)}\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}","/mnt/c/Users/kpove/Programming/projects/scrabble/src/helpers/cellBonusMap.js",[],["40","41"],"/mnt/c/Users/kpove/Programming/projects/scrabble/src/index.js",[],["42","43"],"/mnt/c/Users/kpove/Programming/projects/scrabble/src/App.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":10,"nodeType":"50","messageId":"51","endLine":1,"endColumn":19},{"ruleId":"48","severity":1,"message":"52","line":6,"column":20,"nodeType":"50","messageId":"51","endLine":6,"endColumn":29},{"ruleId":"48","severity":1,"message":"53","line":19,"column":14,"nodeType":"50","messageId":"51","endLine":19,"endColumn":25},{"ruleId":"48","severity":1,"message":"54","line":5,"column":19,"nodeType":"50","messageId":"51","endLine":5,"endColumn":27},{"ruleId":"44","replacedBy":"55"},{"ruleId":"46","replacedBy":"56"},{"ruleId":"44","replacedBy":"57"},{"ruleId":"46","replacedBy":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setLetter' is assigned a value but never used.","'handleClick' is defined but never used.","'setBoard' is assigned a value but never used.",["59"],["60"],["59"],["60"],"no-global-assign","no-unsafe-negation"]