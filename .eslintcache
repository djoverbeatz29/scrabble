[{"/mnt/c/Users/kpove/Programming/projects/scrabble/src/reportWebVitals.js":"1","/mnt/c/Users/kpove/Programming/projects/scrabble/src/helpers/createBoard.js":"2","/mnt/c/Users/kpove/Programming/projects/scrabble/src/components/Cell.js":"3","/mnt/c/Users/kpove/Programming/projects/scrabble/src/components/Board.js":"4","/mnt/c/Users/kpove/Programming/projects/scrabble/src/helpers/cellBonusMap.js":"5","/mnt/c/Users/kpove/Programming/projects/scrabble/src/index.js":"6","/mnt/c/Users/kpove/Programming/projects/scrabble/src/App.js":"7"},{"size":362,"mtime":1608786330576,"results":"8","hashOfConfig":"9"},{"size":945,"mtime":1609875082493,"results":"10","hashOfConfig":"9"},{"size":1387,"mtime":1610497640208,"results":"11","hashOfConfig":"9"},{"size":2735,"mtime":1610487027747,"results":"12","hashOfConfig":"9"},{"size":397,"mtime":1609365488862,"results":"13","hashOfConfig":"9"},{"size":500,"mtime":1608786330514,"results":"14","hashOfConfig":"9"},{"size":241,"mtime":1608786790111,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"wss24z",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/kpove/Programming/projects/scrabble/src/reportWebVitals.js",[],["34","35"],"/mnt/c/Users/kpove/Programming/projects/scrabble/src/helpers/createBoard.js",[],["36","37"],"/mnt/c/Users/kpove/Programming/projects/scrabble/src/components/Cell.js",[],"/mnt/c/Users/kpove/Programming/projects/scrabble/src/components/Board.js",["38"],"import { useState } from 'react';\r\nimport Cell from './Cell';\r\n\r\nexport default function Board(props) {\r\n    const [board, setBoard] = useState(props.board);\r\n    const [currCell, setCurrCell] = useState({x: 7, y: 7, isRight: true});\r\n\r\n    function handleClick(e) {\r\n        const x = parseInt(e.target.dataset.x);\r\n        const y = parseInt(e.target.dataset.y);\r\n        board[x][y].value=board[x][y].isRight ? \"→\" : \"↓\";\r\n        if (x===currCell.x && y===currCell.y) {\r\n            setCurrCell({\r\n                ...currCell,\r\n                isRight: !currCell.isRight\r\n            })\r\n        }\r\n        else {\r\n            setCurrCell({\r\n                ...currCell,\r\n                x: x,\r\n                y: y\r\n            })\r\n        }\r\n        console.log(currCell);\r\n    }\r\n\r\n    function handleKeyDown(e) {\r\n        if (e.shiftKey) {\r\n            if (e.key!=='Shift'){\r\n                console.log(e.key);\r\n                board[currCell.x][currCell.y].letter = e.key;\r\n                setCurrCell({\r\n                    ...currCell,\r\n                    x: currCell.isRight? currCell.x : Math.min(14, currCell.x+1),\r\n                    y: currCell.isRight? Math.min(14, currCell.y+1): currCell.y\r\n                })\r\n                console.log(currCell);\r\n            }\r\n        }\r\n        else {\r\n            if (e.key==='Backspace') {\r\n                console.log(e.key);\r\n                setCurrCell({\r\n                    ...currCell,\r\n                    x: currCell.isRight? currCell.x : Math.max(0, currCell.x-1),\r\n                    y: currCell.isRight? Math.max(0, currCell.y-1): currCell.y\r\n                })\r\n                console.log(currCell);\r\n            }\r\n        }\r\n    }\r\n\r\n    function keyDownInfo(e) {\r\n        if (e.shiftKey) {\r\n            if (e.key!=='Shift'){\r\n                return e.key;\r\n            }\r\n        }\r\n    }\r\n\r\n    function clickInfo() {\r\n\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <table onClick={handleClick} onKeyDown={handleKeyDown} tabIndex={0}>\r\n                <tbody>\r\n                    {board.map(row=>\r\n                        <tr>\r\n                            {row.map(col=><td>{\r\n                                <Cell keyDownInfo={keyDownInfo}\r\n                                    clickInfo={clickInfo} \r\n                                    x={col.x} \r\n                                    y={col.y} \r\n                                    color={col.color} \r\n                                    letter={col.letter} \r\n                                    value={col.value} />}\r\n                                </td>)}\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}","/mnt/c/Users/kpove/Programming/projects/scrabble/src/helpers/cellBonusMap.js",[],["39","40"],"/mnt/c/Users/kpove/Programming/projects/scrabble/src/index.js",[],"/mnt/c/Users/kpove/Programming/projects/scrabble/src/App.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"41","replacedBy":"45"},{"ruleId":"43","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":5,"column":19,"nodeType":"49","messageId":"50","endLine":5,"endColumn":27},{"ruleId":"41","replacedBy":"51"},{"ruleId":"43","replacedBy":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],["53"],["54"],"no-unused-vars","'setBoard' is assigned a value but never used.","Identifier","unusedVar",["53"],["54"],"no-global-assign","no-unsafe-negation"]